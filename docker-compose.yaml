services:
# APPLICATIONS
  frontend:
    image: docker.io/finkingma/blinddatingapp-frontend
    container_name: blinddatingapp-frontend
    ports:
      - "8080:80"
    restart: always

  date:
    image: docker.io/finkingma/date-service
    container_name: date-service
    ports:
      - "9083:9083"
    environment:
      spring.kafka.bootstrap-servers: kafka:9092
      spring.kafka.properties.schema.registry.url: http://schema-registry:8081/apis/ccompat/v7
      endpoints.profileservice: http://profile:9080
      endpoints.locationservice: http://location:9084
    restart: always
    depends_on:
      kafka:
        condition: service_healthy

  websocket:
    image: docker.io/finkingma/websocket-service
    container_name: websocket-service
    ports:
      - "9082:9082"
    environment:
      spring.kafka.bootstrap-servers: kafka:9092
      spring.kafka.properties.schema.registry.url: http://schema-registry:8081/apis/ccompat/v7
    restart: always
    depends_on:
      kafka:
        condition: service_healthy

  matching:
    image: docker.io/finkingma/matching-service
    container_name: matching-service
    ports:
      - "9081:9081"
    environment:
      spring.kafka.bootstrap-servers: kafka:9092
      spring.kafka.properties.schema.registry.url: http://schema-registry:8081/apis/ccompat/v7
      endpoints.profileservice: http://profile:9080
    restart: always
    depends_on:
      kafka:
        condition: service_healthy

  profile:
    image: docker.io/finkingma/profile-service
    container_name: profile-service
    ports:
      - "9080:9080"
    environment:
      spring.kafka.bootstrap-servers: kafka:9092
      spring.kafka.properties.schema.registry.url: http://schema-registry:8081/apis/ccompat/v7
      spring.datasource.url: jdbc:postgresql://postgres:5432/postgres?useSSL=false
      endpoints.locationservice: http://location:9084
    restart: always
    depends_on:
      postgres:
        condition: service_started
      kafka:
        condition: service_healthy

  location:
    image: docker.io/finkingma/location-service
    container_name: location-service
    ports:
      - "9084:9084"
    restart: always

# SUPPORTIVE TOOLS BELOW
  kafka:
    image: bitnamilegacy/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_KRAFT_CLUSTER_ID: kraft-cluster
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      ALLOW_PLAINTEXT_LISTENER: yes
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  schema-registry:
    image: apicurio/apicurio-registry:latest
    container_name: schema-registry
    ports:
      - "8081:8081"
    environment:
      REGISTRY_LOG_LEVEL: INFO
      REGISTRY_UI_FEATURES_READONLY: false
      REGISTRY_STORAGE: mem
      QUARKUS_HTTP_PORT: 8081
      REGISTRY_COMPATIBILITY_CONFLUENT: true
      REGISTRY_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "7777:8080"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: LocalKafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081/apis/ccompat/v7

  postgres:
    image: postgres
    ports:
      - 5432:5432
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: user-name@domain-name.com
      PGADMIN_DEFAULT_PASSWORD: strong-password
    volumes:
      - C:\pgadmin-data:/var/lib/pgadmin